# Hướng dẫn tạo lại database student_management với PostgreSQL

Dưới đây là các lệnh để xóa database cũ, tạo mới và thêm dữ liệu mẫu:

## 1. Xóa database cũ (nếu tồn tại)

```bash
psql -U postgres -c "DROP DATABASE IF EXISTS student_management;"
```

## 2. Tạo database mới với encoding UTF-8

```bash
psql -U postgres -c "CREATE DATABASE student_management WITH ENCODING 'UTF8' TEMPLATE template0;"
```

## 3. Kết nối và tạo các bảng

Lưu đoạn code sau vào file `create_tables.sql`:

```sql
-- Tạo extension nếu cần
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Bảng users
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE,
    role VARCHAR(20) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

COMMENT ON COLUMN users.role IS 'admin|teacher|staff';

-- Bảng students
CREATE TABLE students (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    date_of_birth DATE NOT NULL,
    gender VARCHAR(10) NOT NULL,
    school VARCHAR(255) NOT NULL,
    grade VARCHAR(10) NOT NULL,
    phone_student VARCHAR(20),
    phone_parent VARCHAR(20),
    facebook_link VARCHAR(255),
    note VARCHAR(500),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

COMMENT ON COLUMN students.grade IS 'khối lớp 6 - 12';

-- Bảng classes
CREATE TABLE classes (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    teacher VARCHAR(100) NOT NULL,
    subject VARCHAR(10) NOT NULL,
    room VARCHAR(10) NOT NULL,
    start_date DATE,
    end_date DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

COMMENT ON COLUMN classes.subject IS 'math|physic|chemistry|other';

-- Bảng student_classes
CREATE TABLE student_classes (
    student_id INTEGER NOT NULL,
    class_id INTEGER NOT NULL,
    enrollment_date DATE DEFAULT CURRENT_DATE,
    status VARCHAR(20) DEFAULT 'active',
    PRIMARY KEY (student_id, class_id),
    FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE,
    FOREIGN KEY (class_id) REFERENCES classes(id) ON DELETE CASCADE
);

COMMENT ON COLUMN student_classes.status IS 'active|inactive|dropped';

-- Bảng schedule
CREATE TABLE schedule (
    class_id INTEGER NOT NULL,
    weekday VARCHAR(3) NOT NULL,
    time_start TIME NOT NULL,
    time_end TIME NOT NULL,
    FOREIGN KEY (class_id) REFERENCES classes(id) ON DELETE CASCADE
);

COMMENT ON COLUMN schedule.weekday IS 'mon|tue|wed|thu|fri|sat|sun';

-- Bảng financial_accounts
CREATE TABLE financial_accounts (
    id SERIAL PRIMARY KEY,
    student_id INTEGER NOT NULL UNIQUE,
    current_balance DECIMAL(12,2) NOT NULL DEFAULT 0,
    credit_limit DECIMAL(12,2) DEFAULT 0,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE
);

-- Bảng tuition_plans
CREATE TABLE tuition_plans (
    id SERIAL PRIMARY KEY,
    class_id INTEGER NOT NULL,
    amount DECIMAL(12,2) NOT NULL,
    effective_date DATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (class_id) REFERENCES classes(id) ON DELETE CASCADE
);

-- Bảng invoices
CREATE TABLE invoices (
    id SERIAL PRIMARY KEY,
    student_id INTEGER NOT NULL,
    invoice_number VARCHAR(20) NOT NULL UNIQUE,
    issue_date DATE NOT NULL,
    due_date DATE NOT NULL,
    total_amount DECIMAL(12,2) NOT NULL,
    paid_amount DECIMAL(12,2) DEFAULT 0,
    status VARCHAR(20) NOT NULL DEFAULT 'pending',
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE
);

COMMENT ON COLUMN invoices.status IS 'pending|partial|paid|overdue|cancelled';

-- Bảng invoice_items
CREATE TABLE invoice_items (
    id SERIAL PRIMARY KEY,
    invoice_id INTEGER NOT NULL,
    class_id INTEGER NOT NULL,
    description VARCHAR(255),
    amount DECIMAL(12,2) NOT NULL,
    quantity INTEGER DEFAULT 1,
    subtotal DECIMAL(12,2) NOT NULL,
    FOREIGN KEY (invoice_id) REFERENCES invoices(id) ON DELETE CASCADE,
    FOREIGN KEY (class_id) REFERENCES classes(id) ON DELETE CASCADE
);

-- Bảng transactions
CREATE TABLE transactions (
    id SERIAL PRIMARY KEY,
    account_id INTEGER NOT NULL,
    invoice_id INTEGER,
    amount DECIMAL(12,2) NOT NULL,
    transaction_type VARCHAR(20) NOT NULL,
    payment_method VARCHAR(20),
    reference_number VARCHAR(50),
    description TEXT,
    receipt_image VARCHAR(255),
    created_by INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (account_id) REFERENCES financial_accounts(id) ON DELETE CASCADE,
    FOREIGN KEY (invoice_id) REFERENCES invoices(id) ON DELETE SET NULL,
    FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL
);

COMMENT ON COLUMN transactions.transaction_type IS 'payment|tuition|refund|adjustment|discount';

-- Bảng attendance_records
CREATE TABLE attendance_records (
    id SERIAL PRIMARY KEY,
    student_id INTEGER NOT NULL,
    class_id INTEGER NOT NULL,
    date DATE NOT NULL,
    status VARCHAR(20) NOT NULL,
    notes TEXT,
    recorded_by INTEGER,
    recorded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE,
    FOREIGN KEY (class_id) REFERENCES classes(id) ON DELETE CASCADE,
    FOREIGN KEY (recorded_by) REFERENCES users(id) ON DELETE SET NULL
);

COMMENT ON COLUMN attendance_records.status IS 'present|absent|late|excused';

-- Bảng notifications
CREATE TABLE notifications (
    id SERIAL PRIMARY KEY,
    phone VARCHAR(20) NOT NULL,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    notification_type VARCHAR(20),
    is_read BOOLEAN DEFAULT FALSE,
    read_at TIMESTAMP,
    is_rep BOOLEAN DEFAULT FALSE,
    rep_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

COMMENT ON COLUMN notifications.notification_type IS 'payment|attendance|system';
```

Thực thi file này:

```bash
psql -U postgres -d student_management -f create_tables.sql
```

## 4. Thêm dữ liệu mẫu

Lưu đoạn code sau vào file `insert_data.sql`:

```sql
-- Thêm users
INSERT INTO users (username, password_hash, email, role) VALUES
('admin', '$2a$10$xJwL5v5Jz7t6VhD5x5Yz5eR5z5Y5z5Y5', 'admin@school.com', 'admin'),
('teacher1', '$2a$10$xJwL5v5Jz7t6VhD5x5Yz5eR5z5Y5z5Y5', 'teacher1@school.com', 'teacher'),
('teacher2', '$2a$10$xJwL5v5Jz7t6VhD5x5Yz5eR5z5Y5z5Y5', 'teacher2@school.com', 'teacher'),
('staff1', '$2a$10$xJwL5v5Jz7t6VhD5x5Yz5eR5z5Y5z5Y5', 'staff1@school.com', 'staff');

-- Thêm students
INSERT INTO students (name, date_of_birth, gender, school, grade, phone_student, phone_parent, facebook_link, note) VALUES
('Nguyễn Văn A', '2005-03-15', 'male', 'THPT ABC', '10', '0912345678', '0987654321', 'facebook.com/nguyenvana', 'Học sinh chăm chỉ'),
('Trần Thị B', '2006-05-20', 'female', 'THPT XYZ', '9', '0912345679', '0987654322', 'facebook.com/tranthib', 'Cần hỗ trợ toán'),
('Lê Văn C', '2004-01-10', 'male', 'THPT DEF', '11', '0912345680', '0987654323', 'facebook.com/levanc', 'Học sinh mới');

-- Thêm classes
INSERT INTO classes (name, teacher, subject, room, start_date, end_date) VALUES
('Toán 10 NC', 'Nguyễn Thị D', 'math', 'P101', '2023-09-01', '2024-05-30'),
('Lý 11 CB', 'Trần Văn E', 'physic', 'P102', '2023-09-01', '2024-05-30'),
('Hóa 12', 'Lê Thị F', 'chemistry', 'P103', '2023-09-01', '2024-05-30');

-- Thêm student_classes
INSERT INTO student_classes (student_id, class_id, status) VALUES
(1, 1, 'active'),
(1, 2, 'active'),
(2, 1, 'active'),
(3, 3, 'active');

-- Thêm schedule
INSERT INTO schedule (class_id, weekday, time_start, time_end) VALUES
(1, 'mon', '08:00:00', '10:00:00'),
(1, 'wed', '08:00:00', '10:00:00'),
(2, 'tue', '13:00:00', '15:00:00'),
(2, 'thu', '13:00:00', '15:00:00'),
(3, 'fri', '15:00:00', '17:00:00');

-- Thêm financial_accounts
INSERT INTO financial_accounts (student_id, current_balance) VALUES
(1, 2000000),
(2, 1500000),
(3, 0);

-- Thêm tuition_plans
INSERT INTO tuition_plans (class_id, amount, effective_date) VALUES
(1, 500000, '2023-09-01'),
(2, 600000, '2023-09-01'),
(3, 700000, '2023-09-01');

-- Thêm invoices
INSERT INTO invoices (student_id, invoice_number, issue_date, due_date, total_amount, paid_amount, status) VALUES
(1, 'INV-202310-001', '2023-10-01', '2023-10-10', 1100000, 1100000, 'paid'),
(2, 'INV-202310-002', '2023-10-01', '2023-10-10', 500000, 300000, 'partial'),
(3, 'INV-202310-003', '2023-10-01', '2023-10-10', 700000, 0, 'pending');

-- Thêm invoice_items
INSERT INTO invoice_items (invoice_id, class_id, amount, quantity, subtotal) VALUES
(1, 1, 500000, 1, 500000),
(1, 2, 600000, 1, 600000),
(2, 1, 500000, 1, 500000),
(3, 3, 700000, 1, 700000);

-- Thêm transactions
INSERT INTO transactions (account_id, invoice_id, amount, transaction_type, payment_method, created_by) VALUES
(1, 1, -1100000, 'tuition', NULL, 1),
(1, 1, 1100000, 'payment', 'bank', 4),
(2, 2, -500000, 'tuition', NULL, 1),
(2, 2, 300000, 'payment', 'cash', 4),
(3, 3, -700000, 'tuition', NULL, 1);

-- Thêm attendance_records
INSERT INTO attendance_records (student_id, class_id, date, status, recorded_by) VALUES
(1, 1, '2023-10-02', 'present', 2),
(1, 2, '2023-10-03', 'present', 3),
(2, 1, '2023-10-02', 'absent', 2),
(3, 3, '2023-10-06', 'late', 3);

-- Thêm notifications
INSERT INTO notifications (phone, title, content, notification_type) VALUES
('0987654321', 'Thông báo học phí', 'Vui lòng thanh toán học phí tháng 10', 'payment'),
('0912345679', 'Thông báo nghỉ học', 'Ngày mai lớp nghỉ do cô giáo bận', 'attendance'),
('0987654322', 'Thông báo hệ thống', 'Hệ thống sẽ bảo trì vào 20/10', 'system');
```

Thực thi file này:

```bash
psql -U postgres -d student_management -f insert_data.sql
```

## 5. Kiểm tra dữ liệu

Bạn có thể kiểm tra dữ liệu bằng pgAdmin hoặc các lệnh psql:

```bash
psql -U postgres -d student_management -c "SELECT * FROM students;"
psql -U postgres -d student_management -c "SELECT * FROM invoices;"
```

Như vậy bạn đã có một database student_management hoàn chỉnh với dữ liệu mẫu để phát triển ứng dụng!


-------------------------------------------
# Giải quyết lỗi khi import dữ liệu vào PostgreSQL

Tôi thấy bạn đang gặp một số lỗi khi thực hiện import dữ liệu vào database. Hãy để tôi giúp bạn khắc phục từng vấn đề:

## Nguyên nhân lỗi

1. **Lỗi encoding**: 
   - `ERROR: character with byte sequence 0x8d in encoding "WIN1252" has no equivalent in encoding "UTF8"`
   - Xảy ra do file SQL chứa ký tự Unicode nhưng được lưu với encoding không phù hợp

2. **Lỗi khóa ngoại**:
   - `violates foreign key constraint`
   - Xảy ra do thứ tự chèn dữ liệu không đúng (ví dụ: chèn vào bảng con trước khi bảng cha có dữ liệu)

## Cách khắc phục

### 1. Sửa lỗi encoding

Hãy lưu lại file `insert_data.sql` với encoding UTF-8:

1. Mở file bằng Notepad++
2. Chọn "Encoding" → "Convert to UTF-8"
3. Lưu file

### 2. Sửa thứ tự chèn dữ liệu

File SQL cần được sắp xếp lại theo thứ tự sau:

```sql
-- 1. Users (không phụ thuộc vào bảng nào)
INSERT INTO users (username, password_hash, email, role) VALUES
('admin', '$2a$10$xJwL5v5Jz7t6VhD5x5Yz5eR5z5Y5z5Y5', 'admin@school.com', 'admin'),
('teacher1', '$2a$10$xJwL5v5Jz7t6VhD5x5Yz5eR5z5Y5z5Y5', 'teacher1@school.com', 'teacher'),
('teacher2', '$2a$10$xJwL5v5Jz7t6VhD5x5Yz5eR5z5Y5z5Y5', 'teacher2@school.com', 'teacher'),
('staff1', '$2a$10$xJwL5v5Jz7t6VhD5x5Yz5eR5z5Y5z5Y5', 'staff1@school.com', 'staff');

-- 2. Students (bảng cha của nhiều bảng khác)
INSERT INTO students (name, date_of_birth, gender, school, grade, phone_student, phone_parent, facebook_link, note) VALUES
('Nguyen Van A', '2005-03-15', 'male', 'THPT ABC', '10', '0912345678', '0987654321', 'facebook.com/nguyenvana', 'Hoc sinh cham chi'),
('Tran Thi B', '2006-05-20', 'female', 'THPT XYZ', '9', '0912345679', '0987654322', 'facebook.com/tranthib', 'Can ho tro toan'),
('Le Van C', '2004-01-10', 'male', 'THPT DEF', '11', '0912345680', '0987654323', 'facebook.com/levanc', 'Hoc sinh moi');

-- 3. Classes (cần có trước khi thêm student_classes)
INSERT INTO classes (name, teacher, subject, room, start_date, end_date) VALUES
('Toan 10 NC', 'Nguyen Thi D', 'math', 'P101', '2023-09-01', '2024-05-30'),
('Ly 11 CB', 'Tran Van E', 'physic', 'P102', '2023-09-01', '2024-05-30'),
('Hoa 12', 'Le Thi F', 'chemistry', 'P103', '2023-09-01', '2024-05-30');

-- 4. Financial_accounts (phụ thuộc vào students)
INSERT INTO financial_accounts (student_id, current_balance) VALUES
(1, 2000000),
(2, 1500000),
(3, 0);

-- 5. Tuition_plans (phụ thuộc vào classes)
INSERT INTO tuition_plans (class_id, amount, effective_date) VALUES
(1, 500000, '2023-09-01'),
(2, 600000, '2023-09-01'),
(3, 700000, '2023-09-01');

-- 6. Student_classes (phụ thuộc vào students và classes)
INSERT INTO student_classes (student_id, class_id, status) VALUES
(1, 1, 'active'),
(1, 2, 'active'),
(2, 1, 'active'),
(3, 3, 'active');

-- 7. Schedule (phụ thuộc vào classes)
INSERT INTO schedule (class_id, weekday, time_start, time_end) VALUES
(1, 'mon', '08:00:00', '10:00:00'),
(1, 'wed', '08:00:00', '10:00:00'),
(2, 'tue', '13:00:00', '15:00:00'),
(2, 'thu', '13:00:00', '15:00:00'),
(3, 'fri', '15:00:00', '17:00:00');

-- 8. Invoices (phụ thuộc vào students)
INSERT INTO invoices (student_id, invoice_number, issue_date, due_date, total_amount, paid_amount, status) VALUES
(1, 'INV-202310-001', '2023-10-01', '2023-10-10', 1100000, 1100000, 'paid'),
(2, 'INV-202310-002', '2023-10-01', '2023-10-10', 500000, 300000, 'partial'),
(3, 'INV-202310-003', '2023-10-01', '2023-10-10', 700000, 0, 'pending');

-- 9. Invoice_items (phụ thuộc vào invoices và classes)
INSERT INTO invoice_items (invoice_id, class_id, amount, quantity, subtotal) VALUES
(1, 1, 500000, 1, 500000),
(1, 2, 600000, 1, 600000),
(2, 1, 500000, 1, 500000),
(3, 3, 700000, 1, 700000);

-- 10. Transactions (phụ thuộc vào financial_accounts và invoices)
INSERT INTO transactions (account_id, invoice_id, amount, transaction_type, payment_method, created_by) VALUES
(1, 1, -1100000, 'tuition', NULL, 1),
(1, 1, 1100000, 'payment', 'bank', 4),
(2, 2, -500000, 'tuition', NULL, 1),
(2, 2, 300000, 'payment', 'cash', 4),
(3, 3, -700000, 'tuition', NULL, 1);

-- 11. Attendance_records (phụ thuộc vào students và classes)
INSERT INTO attendance_records (student_id, class_id, date, status, recorded_by) VALUES
(1, 1, '2023-10-02', 'present', 2),
(1, 2, '2023-10-03', 'present', 3),
(2, 1, '2023-10-02', 'absent', 2),
(3, 3, '2023-10-06', 'late', 3);

-- 12. Notifications (không phụ thuộc)
INSERT INTO notifications (phone, title, content, notification_type) VALUES
('0987654321', 'Thong bao hoc phi', 'Vui long thanh toan hoc phi thang 10', 'payment'),
('0912345679', 'Thong bao nghi hoc', 'Ngay mai lop nghi do co giao ban', 'attendance'),
('0987654322', 'Thong bao he thong', 'He thong se bao tri vao 20/10', 'system');
```

### 3. Thực hiện lại các bước

1. Xóa database cũ:
   ```bash
   psql -U postgres -c "DROP DATABASE IF EXISTS student_management;"
   ```

2. Tạo database mới:
   ```bash
   psql -U postgres -c "CREATE DATABASE student_management WITH ENCODING 'UTF8' TEMPLATE template0;"
   ```

3. Tạo bảng:
   ```bash
   psql -U postgres -d student_management -f create_tables.sql
   ```

4. Import dữ liệu (sau khi đã sửa file):
   ```bash
   psql -U postgres -d student_management -f insert_data.sql
   ```

## Kiểm tra kết quả

Sau khi thực hiện các bước trên, bạn có thể kiểm tra dữ liệu:

```bash
psql -U postgres -d student_management -c "SELECT * FROM students;"
psql -U postgres -d student_management -c "SELECT * FROM invoices;"
```

Nếu vẫn gặp lỗi, vui lòng cho tôi biết thông báo lỗi cụ thể để tôi hỗ trợ tốt hơn.